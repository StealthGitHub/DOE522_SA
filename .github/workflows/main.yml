name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: | 
      #npm install
      
    - name: Build application
      run: |
      #npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: |
      #npm install
      
    - name: Run tests and code quality checks
      run: |
        #npm run test
        # You can add other code quality checks here, like code coverage and analysis

  deploy:
      name: Deploy
      runs-on: ubuntu-latest

      

        - name: Deploy to staging environment
          run: |
          # Add commands to deploy the application to a staging environment
          # For example, if you are deploying to a web server:
          # ssh user@staging-server "cd /path/to/app && git pull origin main && npm install && npm restart"
          
  notify:
    name: Notify Team
    needs: [build, test, deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Send Slack notification on failure
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{'text':'Build or Deployment Failed!'}" $SLACK_WEBHOOK_URL
